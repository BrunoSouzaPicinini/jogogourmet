/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import java.util.ArrayList;
import javax.swing.JOptionPane;
import model.GrupoDiferenca;
import model.Prato;

/**
 *
 * @author bruno
 */
public class principal extends javax.swing.JFrame {

     private Prato lasanha = new Prato("lasanha");
     private Prato boloDeChocolate = new Prato("bolo de chocolate");
     private GrupoDiferenca massa= new GrupoDiferenca("massa");
     private GrupoDiferenca grupoDoBolo = new GrupoDiferenca("");
     
     
    public principal() {
        initComponents();
        massa.setPrato(lasanha);
        grupoDoBolo.setPrato(boloDeChocolate);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Jogo Gourmet");

        jButton1.setText("OK");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        jLabel1.setText("Pense em um prato que gosta");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(100, 100, 100)
                .addComponent(jButton1)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(41, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(37, 37, 37))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(34, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addGap(27, 27, 27)
                .addComponent(jButton1)
                .addGap(19, 19, 19))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        this.setVisible(false);
        perguntar(massa,false,true);
        this.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(principal.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new principal().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables

    private boolean perguntar(GrupoDiferenca grupo, boolean sub, boolean perguntaPratoGrupo) {
        int numSubGrupos = grupo.getSubGrupo().size();
        int contador = 0;
        if (JOptionPane.showConfirmDialog(null, "O prato que você pensou é " + grupo.getDescricao(), "Corfirme", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (grupo.getSubGrupo().size() != 0) {

                while (contador < numSubGrupos) {
                    GrupoDiferenca subGrupo = grupo.getSubGrupo().get(contador);
                    if (perguntar(subGrupo, true, contador + 1 == numSubGrupos ? true : false)) {
                        return true;
                    }
                    contador++;
                }
                return false;
            }
            return perguntarPratoGrupo(grupo, sub);
            //Não 
        } else {
            if (perguntaPratoGrupo == false) {
                return false;
            }
            if (sub == false) {
                perguntarSegundoGrupo(grupoDoBolo, false, true);
                return false;
            }
            return perguntarPratoGrupo(grupo.getGrupoPai(), sub);

        }
    }
    
    private boolean perguntarSegundoGrupo(GrupoDiferenca grupo, boolean sub, boolean perguntaPratoGrupo) {
        int numSubGrupos = grupo.getSubGrupo().size();
        int contador = 0;
        if(sub){
            return perguntarSubGrupo(grupo, sub, perguntaPratoGrupo);
        }else{
        if (JOptionPane.showConfirmDialog(null, "O prato que você pensou é " + grupo.getPrato().getDescricaoPrato(),
             "Corfirme", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            acertei();
            return true;
            //Não 
        } else {
            if (grupo.getSubGrupo().size() != 0) {

                while (contador < numSubGrupos) {
                    GrupoDiferenca subGrupo = grupo.getSubGrupo().get(contador);
                    if (perguntarSegundoGrupo(subGrupo, true, contador + 1 == numSubGrupos ? true : false)) {
                        return true;
                    }
                    contador++;
                }
                return false;
            }
            if (perguntaPratoGrupo == false) {
                return false;
            }
            cadastrarNovoPrato(grupo);
            return true;
        }
        }
    }
    
    
     private boolean perguntarSubGrupo(GrupoDiferenca grupo, boolean sub, boolean perguntaPratoGrupo) {
        int numSubGrupos = grupo.getSubGrupo().size();
        int contador = 0;
        if (JOptionPane.showConfirmDialog(null, "O prato que você pensou é " + grupo.getDescricao(), "Corfirme", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            if (grupo.getSubGrupo().size() != 0) {

                while (contador < numSubGrupos) {
                    GrupoDiferenca subGrupo = grupo.getSubGrupo().get(contador);
                    if (perguntar(subGrupo, true, contador + 1 == numSubGrupos ? true : false)) {
                        return true;
                    }
                    contador++;
                }
                return false;
            }
            return perguntarPratoGrupo(grupo, sub);
            //Não 
        } else {
            if (perguntaPratoGrupo == false) {
                return false;
            }

            cadastrarNovoPrato(grupo.getGrupoPai());
            return true;

        }
    }

    private void acertei() {
        JOptionPane.showMessageDialog(null, "Acertei de novo");
    }

    private void cadastrarNovoPrato(GrupoDiferenca grupo) {
        Prato novoPrato = new Prato(JOptionPane.showInputDialog("Informe o prato que você pensou:"));
        GrupoDiferenca novoGrupo = new GrupoDiferenca(JOptionPane.showInputDialog("O que " + novoPrato.getDescricaoPrato() + " é que " + grupo.getPrato().getDescricaoPrato() + " não é?"));
        novoGrupo.setGrupoPai(grupo);
        novoGrupo.setPrato(novoPrato);
        grupo.getSubGrupo().add(novoGrupo);
    }

    private boolean perguntarPratoGrupo(GrupoDiferenca grupo, boolean subGrupo) {
        if (JOptionPane.showConfirmDialog(null, "O prato que você pensou é " + grupo.getPrato().getDescricaoPrato(), "Corfirme", JOptionPane.YES_NO_OPTION) == JOptionPane.YES_OPTION) {
            acertei();
            return true;
        } else {

            cadastrarNovoPrato(grupo);

            return subGrupo;
        }
    }

}
